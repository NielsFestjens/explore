{"version":3,"sources":["webpack:///webpack/bootstrap 50dbe818d66ced7f8c9b","webpack:///./ts/shared/Random.ts","webpack:///./ts/webworkers/tileworker/TileWorker.ts","webpack:///./ts/webworkers/tileworker/Commands.ts","webpack:///./ts/webworkers/tileworker/CommandHandlers/index.ts","webpack:///./ts/webworkers/tileworker/commandHandlers/Initialize.ts","webpack:///./ts/shared/Vector2.ts","webpack:///./ts/webworkers/tileworker/Tree.ts","webpack:///./ts/webworkers/tileworker/Events.ts","webpack:///./ts/webworkers/tileworker/TileSet.ts","webpack:///./ts/webworkers/tileworker/TileWorkerContext.ts"],"names":[],"mappings":"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","file":"js/tileworker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50dbe818d66ced7f8c9b","export class Random {\r\n    public seed: number;\r\n    static static: Random = new Random(Math.random());\r\n\r\n    constructor(seed: number) {\r\n        this.seed = seed;\r\n    }\r\n\r\n    next() {\r\n        var x = Math.sin(this.seed++) * 10000;\r\n        return x - Math.floor(x);\r\n    }\r\n\r\n    nextBetween(min: number, max: number) {\r\n        if (min === max)\r\n            return (min);\r\n        \r\n        var next = this.next();\r\n        return ((next * (max - min)) + min);\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/shared/Random.ts","import * as Commands from \"webworkers/tileworker/Commands\";\r\nimport * as CommandHandlers from \"webworkers/tileworker/CommandHandlers\";\r\nimport { TileWorkerContext } from 'webworkers/tileworker/TileWorkerContext';\r\nimport { Random } from 'shared/Random';\r\n\r\nexport class TileWorker {\r\n    \r\n    private handlers: { [id: string] : any; } = {};\r\n    private context: TileWorkerContext;\r\n        \r\n    constructor() {\r\n        this.handlers[new Commands.Initialize().name] = CommandHandlers.Initialize;\r\n\r\n        addEventListener('message', this.handleMessage);\r\n\r\n        this.initializeContext();\r\n    }\r\n\r\n    private initializeContext() {\r\n        var random = new Random(500);\r\n        this.context = new TileWorkerContext(this, random);\r\n    }\r\n\r\n    private handleMessage = (message: MessageEvent) => {\r\n        var handler = this.handlers[message.data.name];\r\n        var handlerInstance = new handler();\r\n        handlerInstance.handle(this.context, message.data);\r\n    }\r\n\r\n    public sendMessage(message: any) {\r\n        postMessage(message, undefined);\r\n    }\r\n}\r\n\r\nvar worker = new TileWorker();\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/TileWorker.ts","import { IWorkerCommand } from 'webworkers/IWorkerCommand';\r\n\r\nexport class Initialize implements IWorkerCommand {\r\n    public name = \"Initialize\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/Commands.ts","export { Initialize } from \"webworkers/tileworker/commandHandlers/Initialize\";\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/CommandHandlers/index.ts","import { Vector2 } from \"shared/Vector2\";\r\n\r\nimport { IWorkerCommand, IWorkerCommandHandler } from 'webworkers/IWorkerCommand';\r\nimport * as Commands from 'webworkers/tileworker/Commands';\r\nimport { TileWorkerContext } from 'webworkers/tileworker/TileWorkerContext';\r\n\r\nimport { Tree } from 'webworkers/tileworker/Tree';\r\nimport { TileSet } from 'webworkers/tileworker/TileSet';\r\n\r\nexport class Initialize implements IWorkerCommandHandler<TileWorkerContext, Commands.Initialize> {\r\n\r\n    handle(context: TileWorkerContext, command: Commands.Initialize): void {\r\n        context.tileSet = new TileSet(10);\r\n        this.createTrees(context);\r\n        context.tileSet.initialize();\r\n    }\r\n\r\n    createTrees(context: TileWorkerContext) {\r\n        for (let x = -5; x <= 5; x++) {\r\n            for (let y = -5; y <= 5; y++) {\r\n                if (context.random.next() < 0.75) {\r\n                    var tree = new Tree(context);\r\n                    var seed = context.random.next();\r\n                    var age = context.random.next();\r\n                    tree.init(seed, age);\r\n\r\n                    context.tileSet.setTile(new Vector2(x, y), tree);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/commandHandlers/Initialize.ts","export class Vector2 {\r\n    constructor(\r\n        public x: number,\r\n        public y: number\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/shared/Vector2.ts","import { ITileContent, Tile } from \"webworkers/tileworker/TileSet\";\r\nimport { Random } from \"shared/Random\";\r\nimport { TileWorkerContext } from 'webworkers/tileworker/TileWorkerContext';\r\nimport { CreatedTree, UpdatedTree } from \"webworkers/tileworker/Events\";\r\n\r\nexport class Tree implements ITileContent {\r\n    public description: string;\r\n    private tile: Tile;\r\n    \r\n    private seed: number;\r\n    private age: number;\r\n    private random: Random;\r\n\r\n    constructor(\r\n        private context: TileWorkerContext\r\n    ) { }\r\n\r\n    init(seed: number, age: number) {\r\n        this.seed = seed;\r\n        this.age = age;\r\n    }\r\n\r\n    public setTile(tile: Tile) {\r\n        this.tile = tile;\r\n        \r\n        this.context.worker.sendMessage(new CreatedTree(tile.index, this.age, this.seed));\r\n    }\r\n\r\n    public runTick(tickNr: number) {\r\n        var random = new Random(this.seed + tickNr);\r\n        if (this.age < 1) {\r\n            if (random.next() < .01) {\r\n                this.age += .01;\r\n                if (this.age > 1)\r\n                    this.age = 1;\r\n\r\n                this.context.worker.sendMessage(new UpdatedTree(this.tile.index, this.age));\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/Tree.ts","import { Vector2 } from \"shared/Vector2\";\r\n\r\nexport class CreatedTree {\r\n    public name = \"CreatedTree\";\r\n\r\n    constructor(\r\n        public tileIndex?: Vector2,\r\n        public age?: number,\r\n        public seed?: number\r\n    ) { }\r\n}\r\n\r\nexport class UpdatedTree {\r\n    public name = \"UpdatedTree\";\r\n\r\n    constructor(\r\n        public tileIndex?: Vector2,\r\n        public age?: number\r\n    ) { }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/Events.ts","import { Vector2 } from \"shared/Vector2\";\r\nimport { CreatedTree } from \"webworkers/tileworker/Events\";\r\nimport { TileWorkerContext } from \"webworkers/tileworker/TileWorkerContext\";\r\n\r\nexport class Tile {\r\n    public content: ITileContent;\r\n    public actions: string[];\r\n\r\n    constructor(\r\n        public index: Vector2\r\n    ) {\r\n    }\r\n\r\n    runTick(tickNr: number) {\r\n        if (this.content)\r\n            this.content.runTick(tickNr);        \r\n    }\r\n}\r\n\r\nexport interface ITileContent {\r\n    description: string;\r\n    setTile(tile: Tile): void;\r\n    runTick(tickNr: number): void;\r\n}\r\n\r\nexport class TileSet {\r\n    public tileSize: number = 10;\r\n    public tiles: Tile[][];\r\n    private tickNr = 0;\r\n\r\n    constructor(\r\n        size: number\r\n    ) {\r\n        this.tiles = [];\r\n        for (let x = -size / 2; x <= size / 2; x++) {\r\n            this.tiles[x] = [];\r\n        }\r\n    }\r\n\r\n    setTile(index: Vector2, content: ITileContent) {\r\n        var tile = this.tiles[index.x][index.y];\r\n        if (!tile)\r\n            tile = this.tiles[index.x][index.y] = new Tile(index);\r\n            \r\n        tile.content = content;\r\n        content.setTile(tile);\r\n    }\r\n\r\n    getTile(index: Vector2) {\r\n        var row = this.tiles[index.x];\r\n        return row ? row[index.y] : undefined;\r\n    }\r\n\r\n    initialize() {\r\n        setInterval(() => this.runTick(), 1000);\r\n    }\r\n\r\n    runTick() {\r\n        this.tickNr++;\r\n        for (var x in this.tiles) {\r\n            for (var y in this.tiles[x]) {\r\n                // if (this.tiles[x][y])\r\n                //     this.tiles[x][y].runTick(this.tickNr);\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/TileSet.ts","import { Random } from 'shared/Random';\r\nimport { TileSet } from 'webworkers/tileworker/TileSet';\r\nimport { TileWorker } from 'webworkers/tileworker/TileWorker';\r\n\r\nexport class TileWorkerContext {\r\n    public tileSet: TileSet;\r\n\r\n    constructor(\r\n        public worker: TileWorker,\r\n        public random: Random\r\n    ) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ts/webworkers/tileworker/TileWorkerContext.ts"],"sourceRoot":""}